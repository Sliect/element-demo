@import './config.scss';
@import '../common/var.scss';

// 在模块名前加.el-
@mixin b($block) {
  $B: $namespace + '-' + $block !global;

  .#{$B} {
    @content
  }
}

@mixin e($element) {
  @at-root {
    &__#{$element} {
      @content;
    }
  }
}

// 在模块后加--$modifier
@mixin m($modifier) {
  $currentSelector: #{& + $modifier-separator + $modifier};

  @at-root {
    #{$currentSelector} {
      @content
    }
  }
}

// 根元素为.el-alert, $state为center 结果.el-alert.is-center
@mixin when($state) {
  @at-root {
    &.#{$state-prefix + $state} {
      @content;
    }
  }
}


// 响应式布局
@mixin res($key, $map: $breakpoints) {
  @if (map-has-key($map, $key)) {
    @media screen and #{inspect(map-get($map, $key))} {
      @content;
    }
  } @else {
    @warn "Undefeined points: `#{$map}`"
  }
}

@mixin layout($size: '') {
  $size: if($size=='', '', '-'+$size);

  @for $i from 0 through 24 {
    &#{$size}-#{$i} {
      width: $i / 24 * 100%;
    }

    &#{$size}-offset-#{$i} {
      margin-left: $i / 24 * 100%;
    }

    &#{$size}-pull-#{$i} {
      position: relative;
      right: $i / 24 * 100%;
    }

    &#{$size}-push-#{$i} {
      position: relative;
      left: $i / 24 * 100%;
    }
  }

}

@mixin button-size($padding-vertical, $padding-horizontal, $font-size, $border-radius) {
  padding: $padding-vertical $padding-horizontal;
  font-size: $font-size;
  border-radius: $border-radius;
  @include when(round) {
    padding: $padding-vertical $padding-horizontal;
  }
}

@mixin button-variant($color, $bg-color, $border-color) {
  color: $color;
  background-color: $bg-color;
  border-color: $border-color;

  &:hover,
  &:focus {
    color: $color;
    background-color: color-level($bg-color, $button-hover-color-level);
    border-color: color-level($border-color, $button-hover-color-level);
  }

  &:active {
    color: $color;
    background-color: color-level($bg-color, $button-active-color-level);
    border-color: color-level($border-color, $button-active-color-level);
    outline: none;
  }

  @include when(plain) {
    color: $bg-color;
    background-color: color-level($bg-color, -9);
    border-color: color-level($bg-color, -6);

    &:hover,
    &:focus {
      color: $color-white;
      background-color: $bg-color;
      border-color: $bg-color;
    }

    &:active {
      color: $color-white;
      background-color: color-level($bg-color, $button-active-color-level);
      border-color: color-level($bg-color, $button-active-color-level);
    }

    @include when(disabled) {
       &,
       &:hover,
       &:focus,
       &:active {
        color: color-level($bg-color, -4);
        background-color: color-level($bg-color, -9);
        border-color: color-level($bg-color, -8);
       }
    }
  }

  @include when(disabled) {
    &,
    &:hover,
    &:focus,
    &:active {
      color: $color-white;
      background-color: color-level($bg-color, -5);
      border-color: color-level($border-color, -5);
    }
  }
}

// transition 激活状态
@mixin transition-active() {

  &-enter-active,
  &-leave-active {
    @content;
  }
}
// transition 结束状态
@mixin transition-end() {

  &-leave-to,
  &-enter {
    @content;
  }
}